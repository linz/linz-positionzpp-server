# Configuration file for PositionzPP processor
#
#  This will be processed using the Config::General module using the LowerCaseNames 
#  option.

#  my %config=ParseConfig(-ConfigFile=>$filename,-LowerCaseNames=>1,-InterPolateEnv=>1);
# 

PnzServerRuntime /var/run/positionzpp
PnzServerData /var/lib/positionzpp
PnzServerInterface /var/lib/positionzpp/interface
PnzServerLogs /var/log/positionzpp
PnzServerConf /etc/positionzpp

# Directories for managing the server instances

ServerLockDir ${PnzServerRuntime}
ServerStatusDir ${PnzServerData}/status

# Directories for maintaining job status information and compiling results

WorkDir ${PnzServerData}/work
JobDir [jobid]
StatusFile status.json

# Directories for bernese processing
# Note: The user directory is per server.  The data directory is shared as jobs may
# persist between server runs (waiting for data), so may be picked up by another server
# later.

BernDataDir ${PnzServerData}/berndata
BernUserDir ${PnzServerData}/bernuser/S[serverid]
BernUserTemplate ${PnzServerConf}/user_template

# Directories for interfacing with front end processor
# These can contain {xxx} for environment variables
# [jobid] for the job id
# [version] for the results version

InputDir ${PnzServerInterface}/input
OutputDir ${PnzServerInterface}/output
RefDataDir ${PnzServerInterface}/refdata

InputJobFile [jobid]-input.zip
OutputJobFile [jobid]-output[version].zip

InputControlFile jobdata.json
OutputControlFile results.json

# Directory for holding old input jobs for review
# and retention period in days
# ArchiveBern set to archive Bern output information, and should be one of 
# all, output (OUT and BPE directories), a / separated list of directories,
# or none

ArchiveBerneseDir ${PnzServerData}/archive/bernese
ArchiveInputDir   ${PnzServerData}/archive/input
ArchiveJobJsonDir ${PnzServerData}/archive/jobjson

ArchiveBerneseFile [bernid]_bernese.zip
ArchiveJobJsonFile [jobid]_status.json

ArchiveBerneseRetentionDays 30
ArchiveJobJsonRetentionDays 30
ArchiveInputRetentionDays 30

ArchiveInputData 1
ArchiveJobJson 1
ArchiveBerneseSuccess OUT/BPE/SOL
ArchiveBerneseFail all

# Keep Bernese jobs - should be 0 unless debugging

KeepBerneseCampaign 0

# Lock file name - file used to prevent two processes working on the same job
# The expiry is in seconds - it is assumed that any job lasting longer than this will have 
# got stuck or died.

LockFile pnzlock
LockFileExpiry 3600

# Reference file names

AntennaListFile antlist.json
ReceiverListFile reclist.json

###################################################################
## Files to send to the user
#
#  File names can include:
#    [cccc]     the mark id 
#    [ssss]     the session id
#    [jobid]    the job id
#    [subjob]   the bern subjob id
#    [bernid]   the bernese job id
#    [file]     the source file name

<ReportFiles>
  <ReportFile>
     source SOL/FIN[ssss].SNX
     output FINAL_[cccc]_[subjob].SNX
     description SINEX file of final coordinate calculation for [cccc] ([file])
  </ReportFile>
  <ReportFile>
     source SOL/FIN[ssss].SNX
     output MIN_[cccc]_[subjob].SNX
     description SINEX file of minimum constraints calculation for [cccc] ([file])
  </ReportFile>
</ReportFiles>

###################################################################
# Template for head of processing job

JobHeaderTemplate <<EOF
|LINZ PositioNZ-PP Job Summary
|
* bernjobs
|=============================
|$$+
=report
EOF

###################################################################
# Template used to present the results for one processing job
CompleteReportTemplate <<EOF
+results
|Input data
* files
|         File: $+
= srcfilename
? srcmarkname==markname
|         Mark: $$$+
= markname
-
! srcmarkname==markname
|         Mark: $$$+ (renamed to $$$+)
= srcmarkname markname
-
-
|
|Orbit type: $+
= orbittype
|
|Final Coordinates
* files
+ calc_coords{ markname}
|
|  Mark name: $$$$
|  ITRF08 epoch          :  ####.##
|  ITRF08 XYZ coordinate :  ########.#### #########.#### ########.####
|  ITRF08 lon/lat/hgt    :  ###.######### ###.#########  #####.####
|  NZGD2000 lon/lat/hgt  :  ###.######### ###.#########  #####.####
|
|  XYZ covariance matrix:
|        ##.######### ##.######### ##.#########
|        ##.######### ##.######### ##.#########
|        ##.######### ##.######### ##.#########
|
|  ENU errors (mm):   #####.# #####.#  #####.#
= markname
= year
= xyz[0]  xyz[1]  xyz[2]
= llh[0]  llh[1]  llh[2]
= nzgd2kllh[0]  nzgd2kllh[1]  nzgd2kllh[2]
= covxyz[0][0]  covxyz[0][1]  covxyz[0][2]
= covxyz[1][0]  covxyz[1][1]  covxyz[1][2]
= covxyz[2][0]  covxyz[2][1]  covxyz[2][2]
= sqrt( covenu[0][0])*1000 sqrt( covenu[1][1])*1000  sqrt( covenu[2][2])*1000
-
-
|
|Processing summary (for minimum constraints solution):
|
|     Session: $$$$$$$$$$$$$$$$$$ (UTC)
|          to: $$$$$$$$$$$$$$$$$$ (UTC)
|         DOF: #######  (Degrees of freedom)
|         SEU: ##.####  (Standard error of unit weight)
= session.start session.end final.dof final.seu
|
|Reference stations:
|
|  The following reference stations have been selected to process this mark.
|  The horizontal and vertical fit here represent how well the calculated
|  baselines from the supplied mark to these reference stations fit their 
|  ITRF08 coordinates in the minimum constraints solution.
|
|    Station   offset(km)      Fit(mm)
|                            Hor    Vrt
* refstns
+ helmert{name}
|     $$$$     #####.#     ####.# ####.#
= name offset
= sqrt( residual_enu[0]**2+residual_enu[1]**2)
= residual_enu[2]
-
-
# Not printing this as max for hor not the same as sqrt(maxe**2+maxn**2)
#+ residual_enu=ref_stn_residual_enu
#|     Maximum              ####.# ####.#
#= sqrt( residual_enu[0]**2+residual_enu[1]**2)
#= residual_enu[2]
#-
|
EOF

###################################################################
# Template used to present the results for one processing job
WaitReportTemplate <<EOF
|Input data
|         File: $+
|
|Status
|  $+
= filename
= status_description
EOF

###################################################################
# Template used for jobs that have failed
FailedReportTemplate <<EOF
|Input data
|         File: $+
|
|This job has failed to process.  LINZ staff will review this to ascertain why it has failed.
|You will be emailed within five working days with more information about this job.
= filename
EOF


###################################################################
# Statistical summary logs 
# Record information from bernese runs...

LogStatisticsDir ${PnzServerData}/statistics
SuccessStatisticsFile positionzpp-stats-${year}${month}.csv
FailStatisticsFile positionzpp-failstats-${year}${month}.csv

SuccessStatisticsHeader <<EOF
|id,markname,srcmarkname,filename,srcfilename,sessionstart,duration,lon,lat,ehgt,erre,errn,erru,refcount,refcodes,refminoffset,refmaxoffset,refmaxde,refmaxdn,refmaxdu,orbittype,seu,starttime,endtime,baseline_wkt
EOF

SuccessStatisticsRow <<EOF
* campaign.files
+ results
+ calc_coords{ markname}
|$+,$+,$+,$+,$+,$+,#.#,#.#########,#.#########,#.####,#.#,#.#,#.#,#+,$+,#.##,#.##,#.#,#.#,#.#,$+,#.##,$+,$+,"$+"
= campaign.JOBID
= markname
= srcmarkname
= filename
= srcfilename
= seconds_datetime( campaign.session_start) 
= ( campaign.session_end - campaign.session_start )
= nzgd2kllh[0] nzgd2kllh[1] nzgd2kllh[2]
= sqrt( covenu[1][1])*1000  sqrt( covenu[0][0])*1000 sqrt( covenu[2][2])*1000
= refstn_summary.count refstn_summary.marknames refstn_summary.minoffset refstn_summary.maxoffset
= ref_stn_residual_enu[0] ref_stn_residual_enu[1] ref_stn_residual_enu[2]
= orbit_type final.seu
= seconds_datetime( start_time) seconds_datetime( end_time) 
= baseline_wkt
EOF

FailStatisticsHeader <<EOF
|id,markname,srcmarkname,filename,srcfilename,sessionstart,duration,orbittype,starttime,endtime,fail_pid,fail_script,fail_prog,fail_message
EOF

FailStatisticsRow <<EOF
+ campaign
* files
|$+,$+,$+,$+,$+,$+,#.#,$+,$+,$+,$+,$+,"$+"
= JOBID
= markname
= srcmarkname
= filename
= srcfilename
= seconds_datetime( session_start) 
= ( session_end - session_start )
= orbit_type
= seconds_datetime( start_time) seconds_datetime( end_time) 
= fail_pid fail_script fail_prog fail_message
EOF

#############################################################################
# Error notification email details...

SmtpServer linzsmtp
NotificationEmailFrom bern_server@linz.govt.nz
NotificationEmailTo positionz@linz.govt.nz
NotificationEmailTitle PositioNZ-PP job failure: [bernid] 
NotificationEmailTemplate  <<EOF
|Bernese processing job failed
|
|Job id       : $+
|User email   : $+
|Start time   : $+
|End time     : $+
|Fail PID     : $+
|Fail script  : $+
|Fail message : $+
|
=campaign.JOBID
=email
=start_time
=end_time
=fail_pid
=fail_script
=fail_message
EOF

# LogSettings: The logging for the Product Manager. These must follow log4perl
# config rules.

LogDir ${PnzServerLogs}
LogFile positionzpp-${year}${month}.log
LogFileRetention 365

LogSettings <<EOF
 log4perl.logger                                    = INFO,Logfile
# ##############################################################################
# # Config for the STDOUT Appender
# ##############################################################################
# log4perl.appender.Screen                           = Log::Log4perl::Appender::Screen
# log4perl.appender.Screen.layout                    = Log::Log4perl::Layout::PatternLayout
# log4perl.appender.Screen.stderr                    = 0
# log4perl.appender.Screen.layout.ConversionPattern  = %d %p> %F{1}:%L - %m%n
# ##############################################################################
# # Config for the Log file Appender [logfilename] replaced by loader script
# ##############################################################################
log4perl.appender.Logfile                          = Log::Log4perl::Appender::File
log4perl.appender.Logfile.filename                 = [logfilename]
log4perl.appender.Logfile.mode                     = append
log4perl.appender.Logfile.umask                    = 0002
log4perl.appender.Logfile.layout                   = Log::Log4perl::Layout::PatternLayout
log4perl.appender.Logfile.layout.ConversionPattern = %d %p> %F{1}:%L - %m%n
log4perl.appender.Logfile.TZ                       = NZDT
EOF
